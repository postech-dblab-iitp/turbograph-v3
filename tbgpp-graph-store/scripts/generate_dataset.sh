#!/bin/bash

if [ "$#" -ne 1 ]; then
	echo "Usage: $0 BASE_DIRECTORY" >&2
	exit 1
fi

SCALES=(0.003)
MODES=("interactive")

if false; then
for SCALE in "${SCALES[@]}"; do
	for MODE in "${MODES[@]}"; do
		docker run \
			--mount type=bind,source="$(pwd)"/out_sf${SCALE}_${MODE},target=/out \
			--mount type=bind,source="$(pwd)"/conf,target=/conf,readonly \
			-e SPARK_CONF_DIR=/conf ldbc/datagen-standalone:0.5.0-2.12_spark3.2 \
			--cores 4 \
			--parallelism 4 \
			--memory 512G \
			-- \
			--format csv \
			--scale-factor ${SCALE} \
			--mode ${MODE} \
			--explode-edges \
			--epoch-millis \
			--format-options header=false
	done
done
fi

basedir=$1

# Backup Original Dataset
mkdir ${basedir}/dynamic/original_dataset
mkdir ${basedir}/static/original_dataset
mv ${basedir}/dynamic/* ${basedir}/dynamic/original_dataset/
mv ${basedir}/static/* ${basedir}/static/original_dataset/

# Merge csv files generated by ldbc_datagen into one csv file
./merge-csv-files.sh "${basedir}/dynamic/"
./merge-csv-files.sh "${basedir}/static/"

# Insert Header
./insert-header.sh "${basedir}"

# Backup Unsorted Dataset
for i in ${basedir}/dynamic/*.csv; do
	mv ${i} ${i}.original
done
for i in ${basedir}/static/*.csv; do
	mv ${i} ${i}.original
done

# Sort CSV Files
./sort-dynamic-csv-files.sh "${basedir}/dynamic/"
./sort-static-csv-files.sh "${basedir}/static/"
