MATCH (n:Person)-[r:IS_LOCATED_IN]->(p:Place) RETURN n._id, n.id, n.firstName, n.lastName, p.id;
MATCH (p:Person)<-[r:HAS_CREATOR]-(message:Post) RETURN message.id, p;
MATCH (a:Person)-[r:KNOWS]->(b:Person)  RETURN a.id, a.firstName, b.id, b.firstName;
MATCH (m:Comment {id: 1099511628400})-[roc:REPLY_OF_COMMENT]->(n:Comment)-[ro:REPLY_OF]->(p:Post)<-[co:CONTAINER_OF]-(f:Forum)-[hm:HAS_MODERATOR]->(mod:Person) RETURN f.id, f.title, mod.id, mod.firstName, mod.lastName;
MATCH (a:Person)-[r1:KNOWS]->(b:Person)-[r2:KNOWS]->(c:Person) RETURN c.lastName;
// with clause
MATCH (n:Person) WITH n, n.id AS nid MATCH (n)-[r:KNOWS]->(m:Person) RETURN nid, n.id;
MATCH (n:Person) WITH n MATCH (n)-[r:KNOWS]->(m:Person) RETURN n.id, m.id;
// cartesian product
MATCH (n:TagClass), (m:TagClass) RETURN n,m;
MATCH (n:TagClass), (m:TagClass) RETURN n.id,m.id;
MATCH (n:Person)-[r:KNOWS]->(:Person)-[r2:KNOWS]->(m:Person)-[r3:KNOWS]->(x:Person) RETURN n.id, m.id, x.id;